import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import * as mobilenet from '@tensorflow-models/mobilenet'
require('@tensorflow/tfjs-core'); /* or @tensorflow/tfjs-node */
require('@tensorflow/tfjs-backend-cpu');
import { useState, useEffect, useRef } from 'react'


export default function Home(props) {
  const [isModelLoading, setIsModelLoading] = useState(false)
  const [model, setModel] = useState(null)
  const [imageURL, setImageURL] = useState(null)

  const imageRef = useRef()

  const loadModel = async () => {
    setIsModelLoading(true)
    try{
      let model = await mobilenet.load()
      console.log('model loaded')
      setModel(model)
      setIsModelLoading(false)
    }catch(e){
      console.log(e)
      setIsModelLoading(false)
    }
  }

  const uploadImage = (e) => {
    const { files } = e.target
    const url = files.length ? URL.createObjectURL(files[0]) : null
    setImageURL(url)
  }

  const identify = async () => {
    const results = await model.classify(imageRef.current)
    console.log(results)
  }

  useEffect(() => {
    loadModel()
  }, [])

  if(isModelLoading){
    return <h2>Model loading... </h2>
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className='inputHolder'> 
          <input onChange={uploadImage} type='file' accept='image/*' capture='camera' className='uploadInput' />
        </div>
        <div className='mainWrapper'>
          <div className='mainContent'>
            <div className='imageHolder'>
              {imageURL && <img src={imageURL} alt='Upload Preview' crossOrigin='anonymous' ref={imageRef} />}
            </div>
          </div>
          {imageURL && <button className='button' onClick={identify}>Identify Image</button>}
        </div>
      </main>

      <footer className={styles.footer}>
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
      </footer>
    </div>
  )
}

// export async function getStaticProps(){
//   console.log('Loading mobilenet..');

//   // Load the model.
//   let net = await mobilenet.load();
//   console.log('Successfully loaded model');
// }
